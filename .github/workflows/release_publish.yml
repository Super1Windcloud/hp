name: Hp  Release Pipeline
on:
  push:
    branches: ["main"]
permissions:
  contents: write
env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
  GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, i686, aarch64]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add ${{ matrix.arch }}-pc-windows-msvc
      - run: cargo build  --target ${{ matrix.arch }}-pc-windows-msvc --release

  publish:

    needs:   [build]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Git (for fetch tags)
        run: git fetch --tags

      - name: Get version tag from Python script
        id: version
        run: |
          new_tag=$(python script/get_latest_version.py)
          echo "version=$new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Release And Upload Build Artifacts
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
        with:
          name: "Hp  '${{ steps.version.outputs.new_tag }}'  is published"
          tag_name:   ${{ steps.version.outputs.new_tag }}
          body:  "More new features are now supported."
          files: |
            target/x86_64-pc-windows-msvc/release/hp.exe > hp-x64-${{ steps.build.outputs.appVersion }}.exe
            target/i686-pc-windows-msvc/release/hp.exe > hp-x86-${{ steps.build.outputs.appVersion }}.exe
            target/aarch64-pc-windows-msvc/release/hp.exe > hp-arm64-${{ steps.build.outputs.appVersion }}.exe
